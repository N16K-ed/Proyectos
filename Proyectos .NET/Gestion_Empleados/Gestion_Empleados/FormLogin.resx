<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>